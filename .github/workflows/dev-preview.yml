name: Dev Preview Build (PR)

on:
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  pull-requests: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set ACTIVE_ENV=dev
        run: |
          sed -i "s/^export const ACTIVE_ENV = .*/export const ACTIVE_ENV = 'dev' \/\/ 'dev' | 'prod'/" api/config.js
          echo "✓ Configured ACTIVE_ENV to dev"
          grep -n "ACTIVE_ENV" api/config.js

      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site

      - name: Validate build output
        run: |
          echo "✓ Build successful"
          echo "Checking critical files..."
          test -f _site/index.html || { echo "❌ Missing index.html"; exit 1; }
          test -f _site/api/config.js || { echo "❌ Missing config.js"; exit 1; }
          test -f _site/api/TPEN.js || { echo "❌ Missing TPEN.js"; exit 1; }
          echo "✓ All critical files present"
          
      - name: Check dev configuration
        run: |
          grep -q "ACTIVE_ENV = 'dev'" _site/api/config.js && echo "✓ Dev environment confirmed" || { echo "❌ Config not set to dev"; exit 1; }

      - name: Comment PR with build status
        uses: actions/github-script@v7
        if: always()
        with:
          script: |
            const status = '${{ job.status }}' === 'success' ? '✅' : '❌';
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `${status} **Dev Build ${status === '✅' ? 'Successful' : 'Failed'}**\n\nEnvironment: \`dev\`\n\nThe build has been validated with dev configuration. Production deployment will occur after merge to main.`
            })
